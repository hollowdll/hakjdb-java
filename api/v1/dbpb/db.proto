// HakjDB gRPC API
// API version: 1.2.0
//
// This package contains Protobuf definitions related to databases.

syntax = "proto3";
package api.v1.dbpb;

import "google/protobuf/timestamp.proto";

option java_package = "com.github.hakjdb.hakjdbjava.api.v1.dbpb";

message CreateDBRequest {
  // Name of the database.
  string db_name = 1;
  // Description of the database.
  string description = 2;
}

message CreateDBResponse {
  // Name of the created database.
  string db_name = 1;
}

message GetAllDBsRequest {}

message GetAllDBsResponse {
  // List of returned database names.
  repeated string db_names = 1;
}

message GetDBInfoRequest {
  // Name of the database.
  string db_name = 1;
}

message GetDBInfoResponse {
  // Information about the database.
  DBInfo data = 1;
}

message DeleteDBRequest {
  // Name of the database.
  string db_name = 1;
}

message DeleteDBResponse {
  // Name of the deleted database.
  string db_name = 1;
}

message ChangeDBRequest {
  // Name of the requested database.
  string db_name = 1;
  // New name of the database.
  string new_name = 2;
  // If database name should be changed.
  bool change_name = 3;
  // New description of the database.
  string new_description = 4;
  // If database description should be changed.
  bool change_description = 5;
}

message ChangeDBResponse {
  // Name of the changed database.
  string db_name = 1;
}

// DBInfo represents information about a database.
message DBInfo {
  // Name of the database.
  string name = 1;
  // UTC timestamp when the database was created.
  google.protobuf.Timestamp created_at = 2;
  // UTC timestamp when the database was updated.
  google.protobuf.Timestamp updated_at = 3;
  // Size of the stored data in bytes.
  uint64 data_size = 4;
  // Number of keys in the database.
  uint32 key_count = 5;
  // Description of the database.
  string description = 6;
}

// DBService provides RPCs related to databases.
service DBService {
  // CreateDB creates a new database.
  rpc CreateDB(CreateDBRequest) returns (CreateDBResponse) {}

  // GetAllDBs returns the names of all the databases that exist on the server.
  rpc GetAllDBs(GetAllDBsRequest) returns (GetAllDBsResponse) {}

  // GetDBInfo returns information about a database.
  rpc GetDBInfo(GetDBInfoRequest) returns (GetDBInfoResponse) {}

  // DeleteDB deletes a database.
  rpc DeleteDB(DeleteDBRequest) returns (DeleteDBResponse) {}

  // ChangeDB changes the metadata of a database.
  rpc ChangeDB(ChangeDBRequest) returns (ChangeDBResponse) {}
}
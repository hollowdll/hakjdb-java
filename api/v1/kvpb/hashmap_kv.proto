// HakjDB gRPC API
// API version: 1.2.0
//
// This package contains Protobuf definitions related to key-value storage.

syntax = "proto3";
package api.v1.kvpb;

option java_package = "com.github.hakjdb.hakjdbjava.api.v1.kvpb";

message SetHashMapRequest {
  // The key to use.
  string key = 1;
  // The fields to be set and their corresponding values.
  map<string, bytes> field_value_map = 2;
}

message SetHashMapResponse {
  // The number of fields that were added.
  uint32 fields_added_count = 1;
}

message GetHashMapFieldValuesRequest {
  // The key to use.
  string key = 1;
  // The fields whose values should be returned.
  repeated string fields = 2;
}

message HashMapFieldValue {
  // The value of a HashMap field.
  bytes value = 1;
  // True if the field exists. False if it doesn't exist.
  bool ok = 2;
}

message GetHashMapFieldValuesResponse {
  // The returned values and their fields.
  map<string, HashMapFieldValue> field_value_map = 1;
  // True if the key exists. False if it doesn't exist.
  bool ok = 2;
}

message GetAllHashMapFieldsAndValuesRequest {
  // The key to use.
  string key = 1;
}

message GetAllHashMapFieldsAndValuesResponse {
  // The returned fields and their corresponding values.
  map<string, bytes> field_value_map = 1;
  // True if the key exists. False if it doesn't exist.
  bool ok = 2;
}

message DeleteHashMapFieldsRequest {
  // The key to use.
  string key = 1;
  // The fields to remove from the HashMap.
  repeated string fields = 2;
}

message DeleteHashMapFieldsResponse {
  // The number of fields that were removed.
  uint32 fields_removed_count = 1;
  // True if the key exists. False if it doesn't exist.
  bool ok = 2;
}

// HashMapKVService provides RPCs related to HashMap keys.
service HashMapKVService {
  // SetHashMap sets the specified fields and their values in the HashMap stored at a key.
  // If the specified fields exist, they will be overwritten with the new values.
  // Creates the key if it doesn't exist. Overwrites the key if it is holding a value of another data type.
  // Uses the database sent in gRPC metadata or the default database if omitted.
  rpc SetHashMap(SetHashMapRequest) returns (SetHashMapResponse) {}

  // GetHashMapFieldValues returns the values of the specified fields in the HashMap stored at a key.
  // Uses the database sent in gRPC metadata or the default database if omitted.
  rpc GetHashMapFieldValues(GetHashMapFieldValuesRequest) returns (GetHashMapFieldValuesResponse) {}

  // GetAllHashMapFieldsAndValues returns all the fields and values of the HashMap stored at a key.
  // Uses the database sent in gRPC metadata or the default database if omitted.
  rpc GetAllHashMapFieldsAndValues(GetAllHashMapFieldsAndValuesRequest) returns (GetAllHashMapFieldsAndValuesResponse) {}

  // DeleteHashMapFields removes the specified fields from the HashMap stored at a key.
  // Ignores fields that do not exist.
  // Uses the database sent in gRPC metadata or the default database if omitted.
  rpc DeleteHashMapFields(DeleteHashMapFieldsRequest) returns (DeleteHashMapFieldsResponse) {}
}
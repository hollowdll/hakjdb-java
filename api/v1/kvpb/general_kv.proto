// HakjDB gRPC API
// API version: 1.2.0
//
// This package contains Protobuf definitions related to key-value storage.

syntax = "proto3";
package api.v1.kvpb;

option java_package = "com.github.hakjdb.hakjdbjava.api.v1.kvpb";

message GetAllKeysRequest {}

message GetAllKeysResponse {
  // List of returned keys.
  repeated string keys = 1;
}

message GetKeyTypeRequest {
  // The key whose data type should be returned.
  string key = 1;
}

message GetKeyTypeResponse {
  // The data type of the key.
  string key_type = 1;
  // True if the key exists. False if it doesn't exist.
  bool ok = 2;
}

message DeleteKeysRequest {
  // The keys to delete.
  repeated string keys = 1;
}

message DeleteKeysResponse {
  // The number of keys that were deleted.
  uint32 keys_deleted_count = 1;
}

message DeleteAllKeysRequest {}

message DeleteAllKeysResponse {}

// GeneralKVService provides RPCs related to general key management.
service GeneralKVService {
  // GetAllKeys returns all the keys.
  // Uses the database sent in gRPC metadata or the default database if omitted.
  rpc GetAllKeys(GetAllKeysRequest) returns (GetAllKeysResponse) {}

  // GetKeyType returns the data type of the value a key is holding.
  // Uses the database sent in gRPC metadata or the default database if omitted.
  rpc GetKeyType(GetKeyTypeRequest) returns (GetKeyTypeResponse) {}

  // DeleteKeys deletes the specified keys and the values they are holding.
  // Ignores keys that do not exist.
  // Uses the database sent in gRPC metadata or the default database if omitted.
  rpc DeleteKeys(DeleteKeysRequest) returns (DeleteKeysResponse) {}

  // DeleteAllKeys deletes all the keys.
  // Uses the database sent in gRPC metadata or the default database if omitted.
  rpc DeleteAllKeys(DeleteAllKeysRequest) returns (DeleteAllKeysResponse) {}
}